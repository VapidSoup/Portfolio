/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./css/LandingPage.css":
/*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./css/LandingPage.css ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Jacquard24_Regular_ttf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Jacquard24-Regular.ttf */ \"./css/Jacquard24-Regular.ttf\");\n/* harmony import */ var _image_venuesnap_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../image/venuesnap.png */ \"./image/venuesnap.png\");\n/* harmony import */ var _image_Screenshot_1_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../image/Screenshot-1.png */ \"./image/Screenshot-1.png\");\n/* harmony import */ var _image_linksIcon_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../image/linksIcon.png */ \"./image/linksIcon.png\");\n/* harmony import */ var _image_clipboard_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../image/clipboard.png */ \"./image/clipboard.png\");\n/* harmony import */ var _image_designForFun_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../image/designForFun.png */ \"./image/designForFun.png\");\n// Imports\n\n\n\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_Jacquard24_Regular_ttf__WEBPACK_IMPORTED_MODULE_2__);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_image_venuesnap_png__WEBPACK_IMPORTED_MODULE_3__);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_image_Screenshot_1_png__WEBPACK_IMPORTED_MODULE_4__);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_image_linksIcon_png__WEBPACK_IMPORTED_MODULE_5__);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_image_clipboard_png__WEBPACK_IMPORTED_MODULE_6__);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_image_designForFun_png__WEBPACK_IMPORTED_MODULE_7__);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*font for css */\\r\\n@font-face {\\r\\n    font-family: 'Jacquard';\\r\\n    src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n}\\r\\n\\r\\n/* Main Landing Page Container */\\r\\n.landingMainBox {\\r\\n    width: 100%;\\r\\n    height: 100%; /* Ensure it takes the full viewport height */\\r\\n    background-color: transparent;\\r\\n    position: relative; /* Ensure the content stacks properly over the forest background */\\r\\n    z-index: 1; /* Keeps the content above the forest background */\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n/* Invisible Letter Box for Header */\\r\\n.invisLetterBox {\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    height: 60px;\\r\\n    padding-top: 15px;\\r\\n    font-size: large;\\r\\n    font-family: Verdana, Geneva, Tahoma, serif;\\r\\n    text-align: center;\\r\\n    justify-content: center;\\r\\n    background-color: transparent;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 400%;\\r\\n    -webkit-text-decoration: underline solid #a4c077;\\r\\n            text-decoration: underline solid #a4c077;\\r\\n    color: #a4c077;\\r\\n    align-items: center; /* Vertically center the text */\\r\\n    z-index: 2; /* Stays above the forest */\\r\\n}\\r\\n\\r\\n/* Flexbox for Left and Right Content */\\r\\n.leftRightBox {\\r\\n    width: 100%;\\r\\n    height: 100px; /* Remaining height after the invisLetterBox */\\r\\n    display: flex;\\r\\n    justify-content: center; /* Space between the left and right boxes */\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Left Content Box */\\r\\n.leftNamePlate {\\r\\n    white-space: normal; /* Allows text to wrap */\\r\\n    display: flex;\\r\\n    flex-direction: column; /* Stacks children vertically */\\r\\n    width: 735px;\\r\\n    height: 100px; /* Adjusts height dynamically based on content */\\r\\n    font-size: medium;\\r\\n    border-radius: 29px;\\r\\n    background-color: transparent;\\r\\n    margin-left: 15px;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 175%;\\r\\n    padding-top: 10px;\\r\\n    justify-content: center; /* Centers the text vertically */\\r\\n    align-items: center; /* Centers the text horizontally */\\r\\n    text-align: center; /* Centers text within each line */\\r\\n    line-height: 3px;\\r\\n    z-index: 2; /* Ensures it's above the background */\\r\\n}\\r\\n\\r\\n/* Right Content Box */\\r\\n.rightContentBox {\\r\\n    width: 700px;\\r\\n    height: 450px;\\r\\n    background-color: white; /* Optional: Add background for right content */\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* Add some depth */\\r\\n    z-index: 2; /* Ensure it's above the background */\\r\\n}\\r\\n\\r\\n\\r\\n.background-forest {\\r\\n  position: fixed; /* Keeps it in place as you scroll */\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%; /* Covers the entire viewport */\\r\\n  z-index: -1; /* Ensures it stays behind all content */\\r\\n  overflow: hidden;\\r\\n  background-color: #ececec; /* Sky color or transparent if none */\\r\\n}\\r\\n\\r\\n/* Trees */\\r\\n.tree-container .tree {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  height: 100px; /* Adjust size as needed */\\r\\n  width: 50px;\\r\\n  background-color: #c8e0a0;\\r\\n  -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n}\\r\\n\\r\\n/* Background Trees */\\r\\n.background-tree {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  left: 22%;\\r\\n  height: 300px;\\r\\n  width: 200px;\\r\\n  background-color: #c8e0a0;\\r\\n  -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n}\\r\\n\\r\\n.background-tree2 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 30%;\\r\\n    height: 250px;\\r\\n    width: 200px;\\r\\n    background-color: #b5c897;\\r\\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree3 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 41%;\\r\\n    height: 275px;\\r\\n    width: 200px;\\r\\n    background-color: #bfdb92;\\r\\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree4 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 50%;\\r\\n    height: 175px;\\r\\n    width: 150px;\\r\\n    background-color: #a4c077;\\r\\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree5 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 58%;\\r\\n    height: 310px;\\r\\n    width: 200px;\\r\\n    background-color: #c8e0a0;\\r\\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree6 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 65%;\\r\\n    height: 290px;\\r\\n    width: 200px;\\r\\n    background-color: #c2df93;\\r\\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n/* Sun */\\r\\n.sun {\\r\\n  position: absolute;\\r\\n  top: 90%; /* Starts at the center */\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n  width: 480px;\\r\\n  height: 480px;\\r\\n  background-color: #E7E1A0;\\r\\n  border-radius: 50%;\\r\\n  box-shadow: 0 0 30px rgba(255, 255, 0, 0.8);\\r\\n}\\r\\n\\r\\n\\r\\n/* box to hold nav*/\\r\\n.navHoldBox {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 80px;\\r\\n    background-color: #ececec;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    gap: 5%;\\r\\n    z-index: 2;\\r\\n    justify-content: center;\\r\\n    border-bottom: #979775 solid 2px;\\r\\n    border-top: #979775 solid 2px;\\r\\n    transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n/*nav boxes for nav*/\\r\\n.navBox {\\r\\n    width: 160px;\\r\\n    height: 60px;\\r\\n    background-color: white;\\r\\n    display: flex;\\r\\n    box-shadow: inset 3px;\\r\\n    align-self: center;\\r\\n    text-align: center;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    border-radius: 15px;\\r\\n    box-shadow: inset 0px 2px 6px rgba(0, 0, 0, 0.4);\\r\\n    color: #979775;\\r\\n    font-family: 'Jacqaurd';\\r\\n    font-size: 150%;\\r\\n    cursor: pointer;\\r\\n    border: #939f81 solid 2px;\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.sticky-wrapper {\\r\\n    height: 80px; /* Matches the navbar height */\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.navHoldBox.sticky {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    background-color: #ececec;\\r\\n    z-index: 100; /* Ensure it stays above other elements */\\r\\n}\\r\\n  \\r\\n.sticky-wrapper .navHoldBox.sticky + .sticky-wrapper {\\r\\n    height: 80px; /* Set to the same height as the navbar */\\r\\n}\\r\\n\\r\\n/*under line for any text*/\\r\\n.underlineText {\\r\\n    -webkit-text-decoration: underline black;\\r\\n            text-decoration: underline black;\\r\\n    font-size: 200%;\\r\\n}\\r\\n\\r\\n/*tester for the sun movement*/\\r\\n.invisTester {\\r\\n    height: 2000px\\r\\n}\\r\\n\\r\\n/* ----here we start the css for the about section---- */\\r\\n.aboutTextBox {\\r\\n    height: 650px;\\r\\n    width: 80%;\\r\\n    display: flex;\\r\\n    border-radius: 35px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    /* background-color: rgba(151, 151, 117, 0.65); */\\r\\n    box-shadow: inset 0px 0px 400px rgba(151, 151, 117, 0.95);\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.aboutCenterBox {\\r\\n    height: 95%;\\r\\n    width: 95%;\\r\\n    background-color: rgba(255, 255, 255, 0.34);\\r\\n    display: flex;\\r\\n    border-radius: 35px;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.aboutTitle {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 200%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.leftPicAbout {\\r\\n    width: 40%;\\r\\n    height: 98%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-content: center;\\r\\n    justify-self: center;\\r\\n    justify-content: end;\\r\\n    align-items: center;\\r\\n    background-color: transparent;\\r\\n    margin-left: 10px;\\r\\n    border: black solid 1px;\\r\\n    border-radius: 25px;\\r\\n}\\r\\n\\r\\n.photoPickerButtons {\\r\\n    width: 5px;\\r\\n    height: 10px;\\r\\n    border-radius: 20px;\\r\\n    background-color: rgba(148, 158, 115, 0.35);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-top: 10px;\\r\\n    flex-direction: column;\\r\\n    cursor: pointer;\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\n#photo-picker {\\r\\n  display: flex;\\r\\n  justify-content: center; \\r\\n  align-items: center; \\r\\n  margin-bottom: 10px;\\r\\n  gap: 5px; \\r\\n}\\r\\n\\r\\n.aboutCarryBox {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.rightTextAbout {\\r\\n    display: flex;\\r\\n    width: 55%;\\r\\n    height: 100%;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: black;\\r\\n    flex-direction: column;\\r\\n    justify-self: right;\\r\\n    align-self: self-end;\\r\\n    margin-right: 20px;\\r\\n    padding-top: 2%;\\r\\n}\\r\\n\\r\\n/* this is the section for the projects section */\\r\\n\\r\\n.projectInvisBox {\\r\\n    width: 80%;\\r\\n    height: 525px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.projectTitle {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    display: flex;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 200%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.projectDisplayBox {\\r\\n    height: 200px;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: left;\\r\\n    flex-wrap: wrap;\\r\\n    background-color: rgba(204, 200, 159, 0.5);\\r\\n    border-radius: 35px;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.projectPicBox1 {\\r\\n    height: 95%;\\r\\n    width: 200px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    border-radius: 20px;\\r\\n    margin-left: 2%;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\r\\n    background-size: contain; \\r\\n    background-position: center;\\r\\n}\\r\\n\\r\\n.projectPicBox2 {\\r\\n    height: 95%;\\r\\n    width: 200px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    border-radius: 20px;\\r\\n    margin-left: 2%;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\r\\n    background-size: cover; \\r\\n    background-position: center;\\r\\n}\\r\\n\\r\\n.projectDescriptionBox {\\r\\n    width: 80%;\\r\\n    height: 95%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-self: right;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.projectTitles {\\r\\n    width: 99%;\\r\\n    height: 50px;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    display: flex;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 175%;\\r\\n    justify-content: left;\\r\\n    align-items: center;\\r\\n    padding-left: 15px;\\r\\n}\\r\\n\\r\\n.projectDescription {\\r\\n    width: 100%;\\r\\n    height: 65%;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n/* this is now the section for the timeline section*/\\r\\n\\r\\n.timelineHoldBox {\\r\\n    width: 80%;\\r\\n    height: 750px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.timelineTitle {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    display: flex;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 200%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.timelineTextBox {\\r\\n    width: 100%;\\r\\n    height: 200px;\\r\\n    border-left: #979775 solid 2px;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    margin-bottom: 10px;\\r\\n    background-color: rgba(236, 235, 228, 0.5);\\r\\n}\\r\\n\\r\\n/* .timelineTextBox::before {\\r\\n    content: \\\"\\\";\\r\\n    width: 25%;\\r\\n    height: 0%;\\r\\n    border-top: #979775 dashed 2px;\\r\\n    border: black solid 1px;\\r\\n} */\\r\\n\\r\\n.timelineTextTitle {\\r\\n    width: 35%;\\r\\n    height: 40px;\\r\\n    color: #788564;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    text-decoration: underline;\\r\\n    padding-left: 5%;\\r\\n    border-top: #979775 dashed 2px;\\r\\n}\\r\\n\\r\\n.timelineTextDesc {\\r\\n    height: 80%;\\r\\n    width: 100%;\\r\\n    color: black;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n/* this now continues to the contact section */\\r\\n\\r\\n.contactMainBox {\\r\\n    width: 80%;\\r\\n    height: 650px;\\r\\n    /* background-color: rgba(224, 210, 177, 0.45); */\\r\\n    box-shadow: inset 0px 0px 400px rgba(224, 210, 177, 0.95);\\r\\n    border-radius: 35px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.contactTitleBox {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    border-bottom: #788564 solid 2px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    font-family: 'Jacquard';\\r\\n    color: #788564;\\r\\n    font-size: 200%;\\r\\n}\\r\\n\\r\\n.contactContentBox {\\r\\n    width: 95%;\\r\\n    height: 85%;\\r\\n    background-color: rgba(252, 252, 252, 0.5);\\r\\n    border-radius: 35px;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.contactLeftText{\\r\\n    width: 50%;\\r\\n    height: 100%;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: black;\\r\\n    background-color: transparent;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n.underlinedText {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.a {\\r\\n    color: inherit;\\r\\n}\\r\\n/* this is going to be small pic boxes to be used throughout code*/\\r\\n\\r\\n.linkPic {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \");\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    display: inline-flex;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.clipboardPic {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \");\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n}\\r\\n\\r\\n.funDesignPic {\\r\\n    width: 45%;\\r\\n    height: 96%;\\r\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \");\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://css/LandingPage.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*font for css */\\r\\n@font-face {\\r\\n    font-family: 'Jacquard';\\r\\n    src: url(Jacquard24-Regular.ttf);\\r\\n}\\r\\n\\r\\n/* Main Landing Page Container */\\r\\n.landingMainBox {\\r\\n    width: 100%;\\r\\n    height: 100%; /* Ensure it takes the full viewport height */\\r\\n    background-color: transparent;\\r\\n    position: relative; /* Ensure the content stacks properly over the forest background */\\r\\n    z-index: 1; /* Keeps the content above the forest background */\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n/* Invisible Letter Box for Header */\\r\\n.invisLetterBox {\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    height: 60px;\\r\\n    padding-top: 15px;\\r\\n    font-size: large;\\r\\n    font-family: Verdana, Geneva, Tahoma, serif;\\r\\n    text-align: center;\\r\\n    justify-content: center;\\r\\n    background-color: transparent;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 400%;\\r\\n    text-decoration: underline solid #a4c077;\\r\\n    color: #a4c077;\\r\\n    align-items: center; /* Vertically center the text */\\r\\n    z-index: 2; /* Stays above the forest */\\r\\n}\\r\\n\\r\\n/* Flexbox for Left and Right Content */\\r\\n.leftRightBox {\\r\\n    width: 100%;\\r\\n    height: 100px; /* Remaining height after the invisLetterBox */\\r\\n    display: flex;\\r\\n    justify-content: center; /* Space between the left and right boxes */\\r\\n    box-sizing: border-box;\\r\\n}\\r\\n\\r\\n/* Left Content Box */\\r\\n.leftNamePlate {\\r\\n    white-space: normal; /* Allows text to wrap */\\r\\n    display: flex;\\r\\n    flex-direction: column; /* Stacks children vertically */\\r\\n    width: 735px;\\r\\n    height: 100px; /* Adjusts height dynamically based on content */\\r\\n    font-size: medium;\\r\\n    border-radius: 29px;\\r\\n    background-color: transparent;\\r\\n    margin-left: 15px;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 175%;\\r\\n    padding-top: 10px;\\r\\n    justify-content: center; /* Centers the text vertically */\\r\\n    align-items: center; /* Centers the text horizontally */\\r\\n    text-align: center; /* Centers text within each line */\\r\\n    line-height: 3px;\\r\\n    z-index: 2; /* Ensures it's above the background */\\r\\n}\\r\\n\\r\\n/* Right Content Box */\\r\\n.rightContentBox {\\r\\n    width: 700px;\\r\\n    height: 450px;\\r\\n    background-color: white; /* Optional: Add background for right content */\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* Add some depth */\\r\\n    z-index: 2; /* Ensure it's above the background */\\r\\n}\\r\\n\\r\\n\\r\\n.background-forest {\\r\\n  position: fixed; /* Keeps it in place as you scroll */\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%; /* Covers the entire viewport */\\r\\n  z-index: -1; /* Ensures it stays behind all content */\\r\\n  overflow: hidden;\\r\\n  background-color: #ececec; /* Sky color or transparent if none */\\r\\n}\\r\\n\\r\\n/* Trees */\\r\\n.tree-container .tree {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  height: 100px; /* Adjust size as needed */\\r\\n  width: 50px;\\r\\n  background-color: #c8e0a0;\\r\\n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n}\\r\\n\\r\\n/* Background Trees */\\r\\n.background-tree {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  left: 22%;\\r\\n  height: 300px;\\r\\n  width: 200px;\\r\\n  background-color: #c8e0a0;\\r\\n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\\r\\n}\\r\\n\\r\\n.background-tree2 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 30%;\\r\\n    height: 250px;\\r\\n    width: 200px;\\r\\n    background-color: #b5c897;\\r\\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree3 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 41%;\\r\\n    height: 275px;\\r\\n    width: 200px;\\r\\n    background-color: #bfdb92;\\r\\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree4 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 50%;\\r\\n    height: 175px;\\r\\n    width: 150px;\\r\\n    background-color: #a4c077;\\r\\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree5 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 58%;\\r\\n    height: 310px;\\r\\n    width: 200px;\\r\\n    background-color: #c8e0a0;\\r\\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n.background-tree6 {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 65%;\\r\\n    height: 290px;\\r\\n    width: 200px;\\r\\n    background-color: #c2df93;\\r\\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); \\r\\n}\\r\\n\\r\\n/* Sun */\\r\\n.sun {\\r\\n  position: absolute;\\r\\n  top: 90%; /* Starts at the center */\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n  width: 480px;\\r\\n  height: 480px;\\r\\n  background-color: #E7E1A0;\\r\\n  border-radius: 50%;\\r\\n  box-shadow: 0 0 30px rgba(255, 255, 0, 0.8);\\r\\n}\\r\\n\\r\\n\\r\\n/* box to hold nav*/\\r\\n.navHoldBox {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 80px;\\r\\n    background-color: #ececec;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    gap: 5%;\\r\\n    z-index: 2;\\r\\n    justify-content: center;\\r\\n    border-bottom: #979775 solid 2px;\\r\\n    border-top: #979775 solid 2px;\\r\\n    transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n/*nav boxes for nav*/\\r\\n.navBox {\\r\\n    width: 160px;\\r\\n    height: 60px;\\r\\n    background-color: white;\\r\\n    display: flex;\\r\\n    box-shadow: inset 3px;\\r\\n    align-self: center;\\r\\n    text-align: center;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    border-radius: 15px;\\r\\n    box-shadow: inset 0px 2px 6px rgba(0, 0, 0, 0.4);\\r\\n    color: #979775;\\r\\n    font-family: 'Jacqaurd';\\r\\n    font-size: 150%;\\r\\n    cursor: pointer;\\r\\n    border: #939f81 solid 2px;\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.sticky-wrapper {\\r\\n    height: 80px; /* Matches the navbar height */\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.navHoldBox.sticky {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    background-color: #ececec;\\r\\n    z-index: 100; /* Ensure it stays above other elements */\\r\\n}\\r\\n  \\r\\n.sticky-wrapper .navHoldBox.sticky + .sticky-wrapper {\\r\\n    height: 80px; /* Set to the same height as the navbar */\\r\\n}\\r\\n\\r\\n/*under line for any text*/\\r\\n.underlineText {\\r\\n    text-decoration: underline black;\\r\\n    font-size: 200%;\\r\\n}\\r\\n\\r\\n/*tester for the sun movement*/\\r\\n.invisTester {\\r\\n    height: 2000px\\r\\n}\\r\\n\\r\\n/* ----here we start the css for the about section---- */\\r\\n.aboutTextBox {\\r\\n    height: 650px;\\r\\n    width: 80%;\\r\\n    display: flex;\\r\\n    border-radius: 35px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    /* background-color: rgba(151, 151, 117, 0.65); */\\r\\n    box-shadow: inset 0px 0px 400px rgba(151, 151, 117, 0.95);\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.aboutCenterBox {\\r\\n    height: 95%;\\r\\n    width: 95%;\\r\\n    background-color: rgba(255, 255, 255, 0.34);\\r\\n    display: flex;\\r\\n    border-radius: 35px;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.aboutTitle {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    display: flex;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 200%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.leftPicAbout {\\r\\n    width: 40%;\\r\\n    height: 98%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-content: center;\\r\\n    justify-self: center;\\r\\n    justify-content: end;\\r\\n    align-items: center;\\r\\n    background-color: transparent;\\r\\n    margin-left: 10px;\\r\\n    border: black solid 1px;\\r\\n    border-radius: 25px;\\r\\n}\\r\\n\\r\\n.photoPickerButtons {\\r\\n    width: 5px;\\r\\n    height: 10px;\\r\\n    border-radius: 20px;\\r\\n    background-color: rgba(148, 158, 115, 0.35);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-top: 10px;\\r\\n    flex-direction: column;\\r\\n    cursor: pointer;\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\n#photo-picker {\\r\\n  display: flex;\\r\\n  justify-content: center; \\r\\n  align-items: center; \\r\\n  margin-bottom: 10px;\\r\\n  gap: 5px; \\r\\n}\\r\\n\\r\\n.aboutCarryBox {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.rightTextAbout {\\r\\n    display: flex;\\r\\n    width: 55%;\\r\\n    height: 100%;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: black;\\r\\n    flex-direction: column;\\r\\n    justify-self: right;\\r\\n    align-self: self-end;\\r\\n    margin-right: 20px;\\r\\n    padding-top: 2%;\\r\\n}\\r\\n\\r\\n/* this is the section for the projects section */\\r\\n\\r\\n.projectInvisBox {\\r\\n    width: 80%;\\r\\n    height: 525px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.projectTitle {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    display: flex;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 200%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.projectDisplayBox {\\r\\n    height: 200px;\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: left;\\r\\n    flex-wrap: wrap;\\r\\n    background-color: rgba(204, 200, 159, 0.5);\\r\\n    border-radius: 35px;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.projectPicBox1 {\\r\\n    height: 95%;\\r\\n    width: 200px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    border-radius: 20px;\\r\\n    margin-left: 2%;\\r\\n    background-image: url(\\\"../image/venuesnap.png\\\");\\r\\n    background-size: contain; \\r\\n    background-position: center;\\r\\n}\\r\\n\\r\\n.projectPicBox2 {\\r\\n    height: 95%;\\r\\n    width: 200px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    border-radius: 20px;\\r\\n    margin-left: 2%;\\r\\n    background-image: url(\\\"../image/Screenshot-1.png\\\");\\r\\n    background-size: cover; \\r\\n    background-position: center;\\r\\n}\\r\\n\\r\\n.projectDescriptionBox {\\r\\n    width: 80%;\\r\\n    height: 95%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-self: right;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.projectTitles {\\r\\n    width: 99%;\\r\\n    height: 50px;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    display: flex;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 175%;\\r\\n    justify-content: left;\\r\\n    align-items: center;\\r\\n    padding-left: 15px;\\r\\n}\\r\\n\\r\\n.projectDescription {\\r\\n    width: 100%;\\r\\n    height: 65%;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n/* this is now the section for the timeline section*/\\r\\n\\r\\n.timelineHoldBox {\\r\\n    width: 80%;\\r\\n    height: 750px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.timelineTitle {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    border-bottom: #c6c6a8 solid 2px;\\r\\n    color: #979775;\\r\\n    display: flex;\\r\\n    font-family: 'Jacquard';\\r\\n    font-size: 200%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.timelineTextBox {\\r\\n    width: 100%;\\r\\n    height: 200px;\\r\\n    border-left: #979775 solid 2px;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    margin-bottom: 10px;\\r\\n    background-color: rgba(236, 235, 228, 0.5);\\r\\n}\\r\\n\\r\\n/* .timelineTextBox::before {\\r\\n    content: \\\"\\\";\\r\\n    width: 25%;\\r\\n    height: 0%;\\r\\n    border-top: #979775 dashed 2px;\\r\\n    border: black solid 1px;\\r\\n} */\\r\\n\\r\\n.timelineTextTitle {\\r\\n    width: 35%;\\r\\n    height: 40px;\\r\\n    color: #788564;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    text-decoration: underline;\\r\\n    padding-left: 5%;\\r\\n    border-top: #979775 dashed 2px;\\r\\n}\\r\\n\\r\\n.timelineTextDesc {\\r\\n    height: 80%;\\r\\n    width: 100%;\\r\\n    color: black;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n/* this now continues to the contact section */\\r\\n\\r\\n.contactMainBox {\\r\\n    width: 80%;\\r\\n    height: 650px;\\r\\n    /* background-color: rgba(224, 210, 177, 0.45); */\\r\\n    box-shadow: inset 0px 0px 400px rgba(224, 210, 177, 0.95);\\r\\n    border-radius: 35px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.contactTitleBox {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    border-bottom: #788564 solid 2px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    font-family: 'Jacquard';\\r\\n    color: #788564;\\r\\n    font-size: 200%;\\r\\n}\\r\\n\\r\\n.contactContentBox {\\r\\n    width: 95%;\\r\\n    height: 85%;\\r\\n    background-color: rgba(252, 252, 252, 0.5);\\r\\n    border-radius: 35px;\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.contactLeftText{\\r\\n    width: 50%;\\r\\n    height: 100%;\\r\\n    font-family: 'Courier New', Courier, monospace;\\r\\n    color: black;\\r\\n    background-color: transparent;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n.underlinedText {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n.a {\\r\\n    color: inherit;\\r\\n}\\r\\n/* this is going to be small pic boxes to be used throughout code*/\\r\\n\\r\\n.linkPic {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    background-image: url(../image/linksIcon.png);\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    display: inline-flex;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.clipboardPic {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    background-image: url(../image/clipboard.png);\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n}\\r\\n\\r\\n.funDesignPic {\\r\\n    width: 45%;\\r\\n    height: 96%;\\r\\n    background-image: url(../image/designForFun.png);\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./css/LandingPage.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return '@media '.concat(item[2], ' {').concat(content, '}');\n            }\n            return content;\n        }).join('');\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    ''\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = ''.concat(mediaQuery, ' and ').concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || '' // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return '/*# sourceURL='.concat(cssMapping.sourceRoot || '').concat(source, ' */');\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join('\\n');\n    }\n    return [\n        content\n    ].join('\\n');\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(base64);\n    return '/*# '.concat(data, ' */');\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2FyZW5cXERlc2t0b3BcXFBvcnRmb2xpb1xcbXktcG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGJ1aWxkXFx3ZWJwYWNrXFxsb2FkZXJzXFxjc3MtbG9hZGVyXFxzcmNcXHJ1bnRpbWVcXGFwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnQG1lZGlhICcuY29uY2F0KGl0ZW1bMl0sICcgeycpLmNvbmNhdChjb250ZW50LCAnfScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oJycpO1xuICAgIH0gLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgICA7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFRPRE86IGZpeCB0eXBlXG4gICAgbGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgbW9kdWxlcyA9IFtcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZXMsXG4gICAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9ICcnLmNvbmNhdChtZWRpYVF1ZXJ5LCAnIGFuZCAnKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gbGlzdDtcbn07XG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICAgIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgICAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24oc291cmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9Jy5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCAnICovJyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY29udGVudFxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xuICAgICAgICAgICAgc291cmNlTWFwcGluZ1xuICAgICAgICBdKS5qb2luKCdcXG4nKTtcbiAgICB9XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY29udGVudFxuICAgIF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnLmNvbmNhdChiYXNlNjQpO1xuICAgIHJldHVybiAnLyojICcuY29uY2F0KGRhdGEsICcgKi8nKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = function(url, options) {\n    if (!options) {\n        // eslint-disable-next-line no-param-reassign\n        options = {};\n    } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n    url = url && url.__esModule ? url.default : url;\n    if (typeof url !== 'string') {\n        return url;\n    } // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        // eslint-disable-next-line no-param-reassign\n        url = url.slice(1, -1);\n    }\n    if (options.hash) {\n        // eslint-disable-next-line no-param-reassign\n        url += options.hash;\n    } // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n        return '\"'.concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n'), '\"');\n    }\n    return url;\n};\n\n//# sourceMappingURL=getUrl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2dldFVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2FyZW5cXERlc2t0b3BcXFBvcnRmb2xpb1xcbXktcG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGJ1aWxkXFx3ZWJwYWNrXFxsb2FkZXJzXFxjc3MtbG9hZGVyXFxzcmNcXHJ1bnRpbWVcXGdldFVybC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXJsLCBvcHRpb25zKSB7XG4gICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICBvcHRpb25zID0ge307XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGUsIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsID0gdXJsICYmIHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmw7XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB1cmw7XG4gICAgfSAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gICAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gICAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgICBpZiAoL1tcIicoKSBcXHRcXG5dLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgICAgIHJldHVybiAnXCInLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKSwgJ1wiJyk7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRVcmwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvX2FwcFwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcInByaXZhdGUtbmV4dC1wYWdlcy9fYXBwXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9fYXBwXCJdKVxuICAgICAgfSk7XG4gICAgfVxuICAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./css/LandingPage.css":
/*!*****************************!*\
  !*** ./css/LandingPage.css ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./LandingPage.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./css/LandingPage.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector('#__next_css__DO_NOT_USE__');\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === 'default') {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./LandingPage.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./css/LandingPage.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./LandingPage.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[7].oneOf[12].use[2]!./css/LandingPage.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jc3MvTGFuZGluZ1BhZ2UuY3NzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsZ2ZBQXFQOztBQUV2Ujs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0sZ2ZBQXFQO0FBQzNQO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsZ2ZBQXFQOztBQUUvUTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxrYXJlblxcRGVza3RvcFxcUG9ydGZvbGlvXFxteS1wb3J0Zm9saW9cXGNzc1xcTGFuZGluZ1BhZ2UuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzJdIS4vTGFuZGluZ1BhZ2UuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzJdIS4vTGFuZGluZ1BhZ2UuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1s3XS5vbmVPZlsxMl0udXNlWzJdIS4vTGFuZGluZ1BhZ2UuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./css/LandingPage.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === 'undefined') {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === 'undefined') {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + ' ' + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement('style');\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === 'undefined') {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === 'function') {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || 'head');\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join('\\n');\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? '' : obj.media ? '@media ' + obj.media + ' {' + obj.css + '}' : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute('media', media);\n    } else {\n        style.removeAttribute('media');\n    }\n    if (sourceMap && typeof btoa !== 'undefined') {\n        css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== 'boolean') {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== '[object Array]') {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_LandingPage_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/css/LandingPage.css */ \"./css/LandingPage.css\");\n/* harmony import */ var _css_LandingPage_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_LandingPage_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n// pages/_app.js\n\n // Move the global CSS import here\n// Add any other global styles\n\nfunction MyApp(param) {\n    let { Component, pageProps } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        ...pageProps\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\karen\\\\Desktop\\\\Portfolio\\\\my-portfolio\\\\pages\\\\_app.js\",\n        lineNumber: 7,\n        columnNumber: 10\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxnQkFBZ0I7O0FBQ2UsQ0FBRSxrQ0FBa0M7QUFDOUQsOEJBQThCO0FBQ0Q7QUFFbEMsU0FBU0MsTUFBTSxLQUF3QjtRQUF4QixFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRSxHQUF4QjtJQUNiLHFCQUFPLDhEQUFDRDtRQUFXLEdBQUdDLFNBQVM7Ozs7OztBQUNqQztLQUZTRjtBQUlULGlFQUFlQSxLQUFLQSxFQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGthcmVuXFxEZXNrdG9wXFxQb3J0Zm9saW9cXG15LXBvcnRmb2xpb1xccGFnZXNcXF9hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFnZXMvX2FwcC5qc1xyXG5pbXBvcnQgJ0AvY3NzL0xhbmRpbmdQYWdlLmNzcyc7ICAvLyBNb3ZlIHRoZSBnbG9iYWwgQ1NTIGltcG9ydCBoZXJlXHJcbiAgICAgLy8gQWRkIGFueSBvdGhlciBnbG9iYWwgc3R5bGVzXHJcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xyXG4gIHJldHVybiA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNeUFwcDtcclxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xca2FyZW5cXERlc2t0b3BcXFBvcnRmb2xpb1xcbXktcG9ydGZvbGlvXFxub2RlX21vZHVsZXNcXHJlYWN0XFxqc3gtZGV2LXJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./css/Jacquard24-Regular.ttf":
/*!************************************!*\
  !*** ./css/Jacquard24-Regular.ttf ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/Jacquard24-Regular.560ab84b.ttf";

/***/ }),

/***/ "./image/Screenshot-1.png":
/*!********************************!*\
  !*** ./image/Screenshot-1.png ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/Screenshot-1.d3b3b70b.png";

/***/ }),

/***/ "./image/clipboard.png":
/*!*****************************!*\
  !*** ./image/clipboard.png ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/clipboard.a5d407bb.png";

/***/ }),

/***/ "./image/designForFun.png":
/*!********************************!*\
  !*** ./image/designForFun.png ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/designForFun.a8e585cf.png";

/***/ }),

/***/ "./image/linksIcon.png":
/*!*****************************!*\
  !*** ./image/linksIcon.png ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/linksIcon.ee009e83.png";

/***/ }),

/***/ "./image/venuesnap.png":
/*!*****************************!*\
  !*** ./image/venuesnap.png ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/venuesnap.7501124d.png";

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main"], () => (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);